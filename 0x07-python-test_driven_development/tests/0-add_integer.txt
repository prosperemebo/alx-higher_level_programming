===================================
Test cases for add_integer function
===================================

>>> add_integer = __import__('0-add_integer').add_integer
>>> docstring = __import__('0-add_integer').__doc__
>>> len(docstring) > 0
True
>>> docstring = __import__('0-add_integer').add_integer.__doc__
>>> len(docstring) > 0
True
>>> add_integer(5, 10)
15
>>> add_integer(5.0, 10.0)
15
>>> add_integer(5, -10)
-5
>>> add_integer(-5, 10)
5
>>> add_integer(2)
100
>>> add_integer(4.9, 10.1)
14
>>> add_integer(4.9, -10.1)
-6
>>> add_integer(-4.9, 10.1)
6
>>> add_integer(-4.9, -10.1)
-14
>>> add_integer(0, 0)
0
>>> add_integer("hola", 3)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(4, "soy dora")
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer("hola", "soy dora")
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer
>>> add_integer(1.9, None)
Traceback (most recent call last):
...
TypeError: b must be an integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(5, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer(5, float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'
